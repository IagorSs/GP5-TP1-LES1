// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Combo {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Name        String
  Description String
  Start       DateTime
  End         DateTime
  Pizzas      Pizza[]
  Drinks      Drink[]
  Price       Float

  Order   Order?  @relation(fields: [orderId], references: [id])
  orderId String? @db.ObjectId
}

model Order {

  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
  Status    Status   @default(Recebido)
  Date      DateTime

  Pizzas Pizza[]
  Drinks Drink[]
  Combos Combo[]
  Total  Float

  userId String @db.ObjectId
}

model Drink {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Name        String
  Description String
  Size        String
  Price       Float
  Quantity    Int

  // Apenas para controle do banco
  Combo   Combo?  @relation(fields: [comboId], references: [id])
  comboId String? @db.ObjectId
  Order   Order?  @relation(fields: [orderId], references: [id])
  orderId String? @db.ObjectId
}

model Pizza {

  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  Name      String
  Size      pizza_size    @default(Media)
  Flavor    PizzaFlavor[]
  Price     Float

  // Apenas para controle do banco
  Combo   Combo?  @relation(fields: [comboId], references: [id])
  comboId String? @db.ObjectId
  Order   Order?  @relation(fields: [orderId], references: [id])
  orderId String? @db.ObjectId
}

model PizzaFlavor {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Name        String
  Description String

  // Apenas para controle do banco
  Pizza   Pizza?  @relation(fields: [pizzaId], references: [id])
  pizzaId String? @db.ObjectId
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Name       String
  CPF        String      @unique
  Birthday   DateTime
  Password   String
  Zipcode    String
  Address    String
  Permission Permissions @default(client)
  // Hist√≥rico de pedidos
  Orders     Order[]

}

enum pizza_size {
  Pequena
  Media
  Grande
}

enum Permissions {
  client
  administrator
}

enum Status {
  Recebido
  Preparando
  Enviado

}
