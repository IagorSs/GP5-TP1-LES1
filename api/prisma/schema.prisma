// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Combo {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Name        String
  Description String
  Start       DateTime
  End         DateTime
  Pizzas      String[] @db.ObjectId
  Drinks      String[] @db.ObjectId
  Price       Float
}

model Order {

  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
  Pizzas    String[] @db.ObjectId
  Drinks    String[] @db.ObjectId
  Combo     String[] @db.ObjectId
  Total     Float

}

model Drinks {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Name        String
  Description String
  Size        String
  Price       Float

}

model Pizza {

  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Name      String
  Tamanho   pizza_size @default(Medium)
  Flavor    String[]   @db.ObjectId
  Price     Float

}

model PizzaFlavor {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Name        String
  Description String
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Name       String
  CPF        String      @unique
  Birthday   DateTime
  Password   String
  Zipcode    String
  Address    String
  Orders     Order[]
  Permission Permissions @default(client)
}

enum pizza_size {
  Small
  Medium
  Large
}

enum Permissions {
  client
  administrator
}
